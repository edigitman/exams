/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;

import ro.ghasachi.bt.persistence.tables.Egroup;
import ro.ghasachi.bt.persistence.tables.Egroupuser;
import ro.ghasachi.bt.persistence.tables.Exam;
import ro.ghasachi.bt.persistence.tables.Examinstance;
import ro.ghasachi.bt.persistence.tables.Examitem;
import ro.ghasachi.bt.persistence.tables.Examitemanswer;
import ro.ghasachi.bt.persistence.tables.Studexamanswer;
import ro.ghasachi.bt.persistence.tables.Studexaminstance;
import ro.ghasachi.bt.persistence.tables.User;
import ro.ghasachi.bt.persistence.tables.Verificationtoken;
import ro.ghasachi.bt.persistence.tables.records.EgroupRecord;
import ro.ghasachi.bt.persistence.tables.records.EgroupuserRecord;
import ro.ghasachi.bt.persistence.tables.records.ExamRecord;
import ro.ghasachi.bt.persistence.tables.records.ExaminstanceRecord;
import ro.ghasachi.bt.persistence.tables.records.ExamitemRecord;
import ro.ghasachi.bt.persistence.tables.records.ExamitemanswerRecord;
import ro.ghasachi.bt.persistence.tables.records.StudexamanswerRecord;
import ro.ghasachi.bt.persistence.tables.records.StudexaminstanceRecord;
import ro.ghasachi.bt.persistence.tables.records.UserRecord;
import ro.ghasachi.bt.persistence.tables.records.VerificationtokenRecord;


/**
 * A class modelling foreign key relationships between tables of the <code>mydb</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<EgroupRecord, Integer> IDENTITY_EGROUP = Identities0.IDENTITY_EGROUP;
	public static final Identity<EgroupuserRecord, Integer> IDENTITY_EGROUPUSER = Identities0.IDENTITY_EGROUPUSER;
	public static final Identity<ExamRecord, Integer> IDENTITY_EXAM = Identities0.IDENTITY_EXAM;
	public static final Identity<ExaminstanceRecord, Integer> IDENTITY_EXAMINSTANCE = Identities0.IDENTITY_EXAMINSTANCE;
	public static final Identity<ExamitemRecord, Integer> IDENTITY_EXAMITEM = Identities0.IDENTITY_EXAMITEM;
	public static final Identity<ExamitemanswerRecord, Integer> IDENTITY_EXAMITEMANSWER = Identities0.IDENTITY_EXAMITEMANSWER;
	public static final Identity<StudexamanswerRecord, Integer> IDENTITY_STUDEXAMANSWER = Identities0.IDENTITY_STUDEXAMANSWER;
	public static final Identity<StudexaminstanceRecord, Integer> IDENTITY_STUDEXAMINSTANCE = Identities0.IDENTITY_STUDEXAMINSTANCE;
	public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;
	public static final Identity<VerificationtokenRecord, Integer> IDENTITY_VERIFICATIONTOKEN = Identities0.IDENTITY_VERIFICATIONTOKEN;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<EgroupRecord> KEY_EGROUP_PRIMARY = UniqueKeys0.KEY_EGROUP_PRIMARY;
	public static final UniqueKey<EgroupRecord> KEY_EGROUP_NAME_UNIQUE = UniqueKeys0.KEY_EGROUP_NAME_UNIQUE;
	public static final UniqueKey<EgroupuserRecord> KEY_EGROUPUSER_PRIMARY = UniqueKeys0.KEY_EGROUPUSER_PRIMARY;
	public static final UniqueKey<ExamRecord> KEY_EXAM_PRIMARY = UniqueKeys0.KEY_EXAM_PRIMARY;
	public static final UniqueKey<ExaminstanceRecord> KEY_EXAMINSTANCE_PRIMARY = UniqueKeys0.KEY_EXAMINSTANCE_PRIMARY;
	public static final UniqueKey<ExamitemRecord> KEY_EXAMITEM_PRIMARY = UniqueKeys0.KEY_EXAMITEM_PRIMARY;
	public static final UniqueKey<ExamitemanswerRecord> KEY_EXAMITEMANSWER_PRIMARY = UniqueKeys0.KEY_EXAMITEMANSWER_PRIMARY;
	public static final UniqueKey<StudexamanswerRecord> KEY_STUDEXAMANSWER_PRIMARY = UniqueKeys0.KEY_STUDEXAMANSWER_PRIMARY;
	public static final UniqueKey<StudexaminstanceRecord> KEY_STUDEXAMINSTANCE_PRIMARY = UniqueKeys0.KEY_STUDEXAMINSTANCE_PRIMARY;
	public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
	public static final UniqueKey<UserRecord> KEY_USER_EMAIL_UNIQUE = UniqueKeys0.KEY_USER_EMAIL_UNIQUE;
	public static final UniqueKey<VerificationtokenRecord> KEY_VERIFICATIONTOKEN_PRIMARY = UniqueKeys0.KEY_VERIFICATIONTOKEN_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<EgroupRecord, UserRecord> EGROU_USER_FK = ForeignKeys0.EGROU_USER_FK;
	public static final ForeignKey<EgroupuserRecord, EgroupRecord> GROUP_FK = ForeignKeys0.GROUP_FK;
	public static final ForeignKey<EgroupuserRecord, UserRecord> USER_FK = ForeignKeys0.USER_FK;
	public static final ForeignKey<ExamRecord, UserRecord> PROFID = ForeignKeys0.PROFID;
	public static final ForeignKey<ExaminstanceRecord, ExamRecord> EXAM_FK = ForeignKeys0.EXAM_FK;
	public static final ForeignKey<ExaminstanceRecord, EgroupRecord> EGROUP_FK = ForeignKeys0.EGROUP_FK;
	public static final ForeignKey<ExamitemRecord, ExamRecord> ITEM_EXAM_FK = ForeignKeys0.ITEM_EXAM_FK;
	public static final ForeignKey<ExamitemanswerRecord, ExamitemRecord> ITEM_FK = ForeignKeys0.ITEM_FK;
	public static final ForeignKey<StudexamanswerRecord, StudexaminstanceRecord> STUDEXAMINST_FK = ForeignKeys0.STUDEXAMINST_FK;
	public static final ForeignKey<StudexamanswerRecord, ExamitemRecord> EXAMITEM_FK = ForeignKeys0.EXAMITEM_FK;
	public static final ForeignKey<StudexaminstanceRecord, ExaminstanceRecord> STUD_EXAM_FK = ForeignKeys0.STUD_EXAM_FK;
	public static final ForeignKey<StudexaminstanceRecord, UserRecord> STUD_USER_FK = ForeignKeys0.STUD_USER_FK;
	public static final ForeignKey<VerificationtokenRecord, UserRecord> USERFK = ForeignKeys0.USERFK;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<EgroupRecord, Integer> IDENTITY_EGROUP = createIdentity(Egroup.EGROUP, Egroup.EGROUP.ID);
		public static Identity<EgroupuserRecord, Integer> IDENTITY_EGROUPUSER = createIdentity(Egroupuser.EGROUPUSER, Egroupuser.EGROUPUSER.ID);
		public static Identity<ExamRecord, Integer> IDENTITY_EXAM = createIdentity(Exam.EXAM, Exam.EXAM.ID);
		public static Identity<ExaminstanceRecord, Integer> IDENTITY_EXAMINSTANCE = createIdentity(Examinstance.EXAMINSTANCE, Examinstance.EXAMINSTANCE.ID);
		public static Identity<ExamitemRecord, Integer> IDENTITY_EXAMITEM = createIdentity(Examitem.EXAMITEM, Examitem.EXAMITEM.ID);
		public static Identity<ExamitemanswerRecord, Integer> IDENTITY_EXAMITEMANSWER = createIdentity(Examitemanswer.EXAMITEMANSWER, Examitemanswer.EXAMITEMANSWER.ID);
		public static Identity<StudexamanswerRecord, Integer> IDENTITY_STUDEXAMANSWER = createIdentity(Studexamanswer.STUDEXAMANSWER, Studexamanswer.STUDEXAMANSWER.ID);
		public static Identity<StudexaminstanceRecord, Integer> IDENTITY_STUDEXAMINSTANCE = createIdentity(Studexaminstance.STUDEXAMINSTANCE, Studexaminstance.STUDEXAMINSTANCE.ID);
		public static Identity<UserRecord, Integer> IDENTITY_USER = createIdentity(User.USER, User.USER.ID);
		public static Identity<VerificationtokenRecord, Integer> IDENTITY_VERIFICATIONTOKEN = createIdentity(Verificationtoken.VERIFICATIONTOKEN, Verificationtoken.VERIFICATIONTOKEN.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<EgroupRecord> KEY_EGROUP_PRIMARY = createUniqueKey(Egroup.EGROUP, Egroup.EGROUP.ID);
		public static final UniqueKey<EgroupRecord> KEY_EGROUP_NAME_UNIQUE = createUniqueKey(Egroup.EGROUP, Egroup.EGROUP.NAME);
		public static final UniqueKey<EgroupuserRecord> KEY_EGROUPUSER_PRIMARY = createUniqueKey(Egroupuser.EGROUPUSER, Egroupuser.EGROUPUSER.ID);
		public static final UniqueKey<ExamRecord> KEY_EXAM_PRIMARY = createUniqueKey(Exam.EXAM, Exam.EXAM.ID);
		public static final UniqueKey<ExaminstanceRecord> KEY_EXAMINSTANCE_PRIMARY = createUniqueKey(Examinstance.EXAMINSTANCE, Examinstance.EXAMINSTANCE.ID);
		public static final UniqueKey<ExamitemRecord> KEY_EXAMITEM_PRIMARY = createUniqueKey(Examitem.EXAMITEM, Examitem.EXAMITEM.ID);
		public static final UniqueKey<ExamitemanswerRecord> KEY_EXAMITEMANSWER_PRIMARY = createUniqueKey(Examitemanswer.EXAMITEMANSWER, Examitemanswer.EXAMITEMANSWER.ID);
		public static final UniqueKey<StudexamanswerRecord> KEY_STUDEXAMANSWER_PRIMARY = createUniqueKey(Studexamanswer.STUDEXAMANSWER, Studexamanswer.STUDEXAMANSWER.ID);
		public static final UniqueKey<StudexaminstanceRecord> KEY_STUDEXAMINSTANCE_PRIMARY = createUniqueKey(Studexaminstance.STUDEXAMINSTANCE, Studexaminstance.STUDEXAMINSTANCE.ID);
		public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = createUniqueKey(User.USER, User.USER.ID, User.USER.EMAIL);
		public static final UniqueKey<UserRecord> KEY_USER_EMAIL_UNIQUE = createUniqueKey(User.USER, User.USER.EMAIL);
		public static final UniqueKey<VerificationtokenRecord> KEY_VERIFICATIONTOKEN_PRIMARY = createUniqueKey(Verificationtoken.VERIFICATIONTOKEN, Verificationtoken.VERIFICATIONTOKEN.ID);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<EgroupRecord, UserRecord> EGROU_USER_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_USER_PRIMARY, Egroup.EGROUP, Egroup.EGROUP.USER);
		public static final ForeignKey<EgroupuserRecord, EgroupRecord> GROUP_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_EGROUP_PRIMARY, Egroupuser.EGROUPUSER, Egroupuser.EGROUPUSER.GROUPID);
		public static final ForeignKey<EgroupuserRecord, UserRecord> USER_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_USER_PRIMARY, Egroupuser.EGROUPUSER, Egroupuser.EGROUPUSER.USERID);
		public static final ForeignKey<ExamRecord, UserRecord> PROFID = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_USER_PRIMARY, Exam.EXAM, Exam.EXAM.USERID);
		public static final ForeignKey<ExaminstanceRecord, ExamRecord> EXAM_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_EXAM_PRIMARY, Examinstance.EXAMINSTANCE, Examinstance.EXAMINSTANCE.EXAMID);
		public static final ForeignKey<ExaminstanceRecord, EgroupRecord> EGROUP_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_EGROUP_PRIMARY, Examinstance.EXAMINSTANCE, Examinstance.EXAMINSTANCE.EGROUPID);
		public static final ForeignKey<ExamitemRecord, ExamRecord> ITEM_EXAM_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_EXAM_PRIMARY, Examitem.EXAMITEM, Examitem.EXAMITEM.EXAMID);
		public static final ForeignKey<ExamitemanswerRecord, ExamitemRecord> ITEM_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_EXAMITEM_PRIMARY, Examitemanswer.EXAMITEMANSWER, Examitemanswer.EXAMITEMANSWER.ITEMID);
		public static final ForeignKey<StudexamanswerRecord, StudexaminstanceRecord> STUDEXAMINST_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_STUDEXAMINSTANCE_PRIMARY, Studexamanswer.STUDEXAMANSWER, Studexamanswer.STUDEXAMANSWER.STUDEXAMINST);
		public static final ForeignKey<StudexamanswerRecord, ExamitemRecord> EXAMITEM_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_EXAMITEM_PRIMARY, Studexamanswer.STUDEXAMANSWER, Studexamanswer.STUDEXAMANSWER.EXAMITEM);
		public static final ForeignKey<StudexaminstanceRecord, ExaminstanceRecord> STUD_EXAM_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_EXAMINSTANCE_PRIMARY, Studexaminstance.STUDEXAMINSTANCE, Studexaminstance.STUDEXAMINSTANCE.EXAMID);
		public static final ForeignKey<StudexaminstanceRecord, UserRecord> STUD_USER_FK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_USER_PRIMARY, Studexaminstance.STUDEXAMINSTANCE, Studexaminstance.STUDEXAMINSTANCE.USERID);
		public static final ForeignKey<VerificationtokenRecord, UserRecord> USERFK = createForeignKey(ro.ghasachi.bt.persistence.Keys.KEY_USER_PRIMARY, Verificationtoken.VERIFICATIONTOKEN, Verificationtoken.VERIFICATIONTOKEN.USERID);
	}
}
