/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence.tables.records;


import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import ro.ghasachi.bt.persistence.tables.User;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record8<Integer, String, String, String, String, Byte, String, Timestamp> {

	private static final long serialVersionUID = 913660935;

	/**
	 * Setter for <code>mydb.user.id</code>.
	 */
	public UserRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.user.id</code>.
	 */
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mydb.user.email</code>.
	 */
	public UserRecord setEmail(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.user.email</code>.
	 */
	@NotNull
	@Size(max = 45)
	public String getEmail() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>mydb.user.name</code>.
	 */
	public UserRecord setName(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.user.name</code>.
	 */
	@NotNull
	@Size(max = 45)
	public String getName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mydb.user.lastname</code>.
	 */
	public UserRecord setLastname(String value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.user.lastname</code>.
	 */
	@NotNull
	@Size(max = 45)
	public String getLastname() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>mydb.user.password</code>.
	 */
	public UserRecord setPassword(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.user.password</code>.
	 */
	@Size(max = 45)
	public String getPassword() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>mydb.user.enabled</code>.
	 */
	public UserRecord setEnabled(Byte value) {
		setValue(5, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.user.enabled</code>.
	 */
	@NotNull
	public Byte getEnabled() {
		return (Byte) getValue(5);
	}

	/**
	 * Setter for <code>mydb.user.role</code>.
	 */
	public UserRecord setRole(String value) {
		setValue(6, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.user.role</code>.
	 */
	@NotNull
	@Size(max = 45)
	public String getRole() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>mydb.user.datecreated</code>.
	 */
	public UserRecord setDatecreated(Timestamp value) {
		setValue(7, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.user.datecreated</code>.
	 */
	@NotNull
	public Timestamp getDatecreated() {
		return (Timestamp) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record2<Integer, String> key() {
		return (Record2) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, String, String, String, Byte, String, Timestamp> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, String, String, String, String, Byte, String, Timestamp> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return User.USER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return User.USER.EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return User.USER.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return User.USER.LASTNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return User.USER.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field6() {
		return User.USER.ENABLED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return User.USER.ROLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field8() {
		return User.USER.DATECREATED;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getLastname();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value6() {
		return getEnabled();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getRole();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value8() {
		return getDatecreated();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value2(String value) {
		setEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value3(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value4(String value) {
		setLastname(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value5(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value6(Byte value) {
		setEnabled(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value7(String value) {
		setRole(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord value8(Timestamp value) {
		setDatecreated(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UserRecord values(Integer value1, String value2, String value3, String value4, String value5, Byte value6, String value7, Timestamp value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached UserRecord
	 */
	public UserRecord() {
		super(User.USER);
	}

	/**
	 * Create a detached, initialised UserRecord
	 */
	public UserRecord(Integer id, String email, String name, String lastname, String password, Byte enabled, String role, Timestamp datecreated) {
		super(User.USER);

		setValue(0, id);
		setValue(1, email);
		setValue(2, name);
		setValue(3, lastname);
		setValue(4, password);
		setValue(5, enabled);
		setValue(6, role);
		setValue(7, datecreated);
	}
}
