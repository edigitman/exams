/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import ro.ghasachi.bt.persistence.tables.Examinstance;
import ro.ghasachi.bt.persistence.tables.records.ExaminstanceRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class ExaminstanceDao extends DAOImpl<ExaminstanceRecord, ro.ghasachi.bt.persistence.tables.pojos.Examinstance, Integer> {

	/**
	 * Create a new ExaminstanceDao without any configuration
	 */
	public ExaminstanceDao() {
		super(Examinstance.EXAMINSTANCE, ro.ghasachi.bt.persistence.tables.pojos.Examinstance.class);
	}

	/**
	 * Create a new ExaminstanceDao with an attached configuration
	 */
	@Autowired
	public ExaminstanceDao(Configuration configuration) {
		super(Examinstance.EXAMINSTANCE, ro.ghasachi.bt.persistence.tables.pojos.Examinstance.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(ro.ghasachi.bt.persistence.tables.pojos.Examinstance object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchById(Integer... values) {
		return fetch(Examinstance.EXAMINSTANCE.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public ro.ghasachi.bt.persistence.tables.pojos.Examinstance fetchOneById(Integer value) {
		return fetchOne(Examinstance.EXAMINSTANCE.ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchByName(String... values) {
		return fetch(Examinstance.EXAMINSTANCE.NAME, values);
	}

	/**
	 * Fetch records that have <code>status IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchByStatus(Integer... values) {
		return fetch(Examinstance.EXAMINSTANCE.STATUS, values);
	}

	/**
	 * Fetch records that have <code>startdate IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchByStartdate(Timestamp... values) {
		return fetch(Examinstance.EXAMINSTANCE.STARTDATE, values);
	}

	/**
	 * Fetch records that have <code>enddate IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchByEnddate(Timestamp... values) {
		return fetch(Examinstance.EXAMINSTANCE.ENDDATE, values);
	}

	/**
	 * Fetch records that have <code>points IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchByPoints(Long... values) {
		return fetch(Examinstance.EXAMINSTANCE.POINTS, values);
	}

	/**
	 * Fetch records that have <code>examid IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchByExamid(Integer... values) {
		return fetch(Examinstance.EXAMINSTANCE.EXAMID, values);
	}

	/**
	 * Fetch records that have <code>egroupid IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchByEgroupid(Integer... values) {
		return fetch(Examinstance.EXAMINSTANCE.EGROUPID, values);
	}

	/**
	 * Fetch records that have <code>datecreated IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Examinstance> fetchByDatecreated(Timestamp... values) {
		return fetch(Examinstance.EXAMINSTANCE.DATECREATED, values);
	}
}
