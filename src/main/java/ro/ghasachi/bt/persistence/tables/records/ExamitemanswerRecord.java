/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence.tables.records;


import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ro.ghasachi.bt.persistence.tables.Examitemanswer;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ExamitemanswerRecord extends UpdatableRecordImpl<ExamitemanswerRecord> implements Record4<Integer, Byte, String, Integer> {

	private static final long serialVersionUID = -1469549333;

	/**
	 * Setter for <code>mydb.examitemanswer.id</code>.
	 */
	public ExamitemanswerRecord setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.examitemanswer.id</code>.
	 */
	@NotNull
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>mydb.examitemanswer.correct</code>.
	 */
	public ExamitemanswerRecord setCorrect(Byte value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.examitemanswer.correct</code>.
	 */
	@NotNull
	public Byte getCorrect() {
		return (Byte) getValue(1);
	}

	/**
	 * Setter for <code>mydb.examitemanswer.value</code>.
	 */
	public ExamitemanswerRecord setValue(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.examitemanswer.value</code>.
	 */
	@NotNull
	@Size(max = 100)
	public String getValue() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>mydb.examitemanswer.itemid</code>.
	 */
	public ExamitemanswerRecord setItemid(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>mydb.examitemanswer.itemid</code>.
	 */
	@NotNull
	public Integer getItemid() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Byte, String, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, Byte, String, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Examitemanswer.EXAMITEMANSWER.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Byte> field2() {
		return Examitemanswer.EXAMITEMANSWER.CORRECT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Examitemanswer.EXAMITEMANSWER.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Examitemanswer.EXAMITEMANSWER.ITEMID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Byte value2() {
		return getCorrect();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getItemid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamitemanswerRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamitemanswerRecord value2(Byte value) {
		setCorrect(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamitemanswerRecord value3(String value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamitemanswerRecord value4(Integer value) {
		setItemid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ExamitemanswerRecord values(Integer value1, Byte value2, String value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached ExamitemanswerRecord
	 */
	public ExamitemanswerRecord() {
		super(Examitemanswer.EXAMITEMANSWER);
	}

	/**
	 * Create a detached, initialised ExamitemanswerRecord
	 */
	public ExamitemanswerRecord(Integer id, Byte correct, String value, Integer itemid) {
		super(Examitemanswer.EXAMITEMANSWER);

		setValue(0, id);
		setValue(1, correct);
		setValue(2, value);
		setValue(3, itemid);
	}
}
