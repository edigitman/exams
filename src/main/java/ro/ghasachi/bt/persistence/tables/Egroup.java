/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ro.ghasachi.bt.persistence.Keys;
import ro.ghasachi.bt.persistence.Mydb;
import ro.ghasachi.bt.persistence.tables.records.EgroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Egroup extends TableImpl<EgroupRecord> {

	private static final long serialVersionUID = 1431059358;

	/**
	 * The reference instance of <code>mydb.egroup</code>
	 */
	public static final Egroup EGROUP = new Egroup();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EgroupRecord> getRecordType() {
		return EgroupRecord.class;
	}

	/**
	 * The column <code>mydb.egroup.id</code>.
	 */
	public final TableField<EgroupRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mydb.egroup.name</code>.
	 */
	public final TableField<EgroupRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>mydb.egroup.user</code>.
	 */
	public final TableField<EgroupRecord, Integer> USER = createField("user", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * Create a <code>mydb.egroup</code> table reference
	 */
	public Egroup() {
		this("egroup", null);
	}

	/**
	 * Create an aliased <code>mydb.egroup</code> table reference
	 */
	public Egroup(String alias) {
		this(alias, EGROUP);
	}

	private Egroup(String alias, Table<EgroupRecord> aliased) {
		this(alias, aliased, null);
	}

	private Egroup(String alias, Table<EgroupRecord> aliased, Field<?>[] parameters) {
		super(alias, Mydb.MYDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EgroupRecord, Integer> getIdentity() {
		return Keys.IDENTITY_EGROUP;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EgroupRecord> getPrimaryKey() {
		return Keys.KEY_EGROUP_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EgroupRecord>> getKeys() {
		return Arrays.<UniqueKey<EgroupRecord>>asList(Keys.KEY_EGROUP_PRIMARY, Keys.KEY_EGROUP_NAME_UNIQUE);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<EgroupRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<EgroupRecord, ?>>asList(Keys.EGROU_USER_FK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Egroup as(String alias) {
		return new Egroup(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Egroup rename(String name) {
		return new Egroup(name, null);
	}
}
