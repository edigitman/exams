/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence.tables.pojos;


import java.io.Serializable;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Examitem implements Serializable {

	private static final long serialVersionUID = 1804770621;

	private Long    id;
	private String  assertion;
	private Integer dificulty;
	private Integer points;
	private Integer type;
	private Long    examId;

	public Examitem() {}

	public Examitem(Examitem value) {
		this.id = value.id;
		this.assertion = value.assertion;
		this.dificulty = value.dificulty;
		this.points = value.points;
		this.type = value.type;
		this.examId = value.examId;
	}

	public Examitem(
		Long    id,
		String  assertion,
		Integer dificulty,
		Integer points,
		Integer type,
		Long    examId
	) {
		this.id = id;
		this.assertion = assertion;
		this.dificulty = dificulty;
		this.points = points;
		this.type = type;
		this.examId = examId;
	}

	public Long getId() {
		return this.id;
	}

	public Examitem setId(Long id) {
		this.id = id;
		return this;
	}

	public String getAssertion() {
		return this.assertion;
	}

	public Examitem setAssertion(String assertion) {
		this.assertion = assertion;
		return this;
	}

	public Integer getDificulty() {
		return this.dificulty;
	}

	public Examitem setDificulty(Integer dificulty) {
		this.dificulty = dificulty;
		return this;
	}

	public Integer getPoints() {
		return this.points;
	}

	public Examitem setPoints(Integer points) {
		this.points = points;
		return this;
	}

	public Integer getType() {
		return this.type;
	}

	public Examitem setType(Integer type) {
		this.type = type;
		return this;
	}

	public Long getExamId() {
		return this.examId;
	}

	public Examitem setExamId(Long examId) {
		this.examId = examId;
		return this;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder("Examitem (");

		sb.append(id);
		sb.append(", ").append(assertion);
		sb.append(", ").append(dificulty);
		sb.append(", ").append(points);
		sb.append(", ").append(type);
		sb.append(", ").append(examId);

		sb.append(")");
		return sb.toString();
	}
}
