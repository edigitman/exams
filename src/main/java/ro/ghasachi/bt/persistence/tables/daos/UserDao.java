/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence.tables.daos;


import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import ro.ghasachi.bt.persistence.tables.User;
import ro.ghasachi.bt.persistence.tables.records.UserRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserDao extends DAOImpl<UserRecord, ro.ghasachi.bt.persistence.tables.pojos.User, Record2<Integer, String>> {

	/**
	 * Create a new UserDao without any configuration
	 */
	public UserDao() {
		super(User.USER, ro.ghasachi.bt.persistence.tables.pojos.User.class);
	}

	/**
	 * Create a new UserDao with an attached configuration
	 */
	@Autowired
	public UserDao(Configuration configuration) {
		super(User.USER, ro.ghasachi.bt.persistence.tables.pojos.User.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Record2<Integer, String> getId(ro.ghasachi.bt.persistence.tables.pojos.User object) {
		return compositeKeyRecord(object.getId(), object.getEmail());
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.User> fetchById(Integer... values) {
		return fetch(User.USER.ID, values);
	}

	/**
	 * Fetch records that have <code>email IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.User> fetchByEmail(String... values) {
		return fetch(User.USER.EMAIL, values);
	}

	/**
	 * Fetch a unique record that has <code>email = value</code>
	 */
	public ro.ghasachi.bt.persistence.tables.pojos.User fetchOneByEmail(String value) {
		return fetchOne(User.USER.EMAIL, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.User> fetchByName(String... values) {
		return fetch(User.USER.NAME, values);
	}

	/**
	 * Fetch records that have <code>lastname IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.User> fetchByLastname(String... values) {
		return fetch(User.USER.LASTNAME, values);
	}

	/**
	 * Fetch records that have <code>password IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.User> fetchByPassword(String... values) {
		return fetch(User.USER.PASSWORD, values);
	}

	/**
	 * Fetch records that have <code>enabled IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.User> fetchByEnabled(Byte... values) {
		return fetch(User.USER.ENABLED, values);
	}

	/**
	 * Fetch records that have <code>role IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.User> fetchByRole(String... values) {
		return fetch(User.USER.ROLE, values);
	}

	/**
	 * Fetch records that have <code>datecreated IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.User> fetchByDatecreated(Timestamp... values) {
		return fetch(User.USER.DATECREATED, values);
	}
}
