/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import ro.ghasachi.bt.persistence.tables.Egroup;
import ro.ghasachi.bt.persistence.tables.records.EgroupRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class EgroupDao extends DAOImpl<EgroupRecord, ro.ghasachi.bt.persistence.tables.pojos.Egroup, Integer> {

	/**
	 * Create a new EgroupDao without any configuration
	 */
	public EgroupDao() {
		super(Egroup.EGROUP, ro.ghasachi.bt.persistence.tables.pojos.Egroup.class);
	}

	/**
	 * Create a new EgroupDao with an attached configuration
	 */
	@Autowired
	public EgroupDao(Configuration configuration) {
		super(Egroup.EGROUP, ro.ghasachi.bt.persistence.tables.pojos.Egroup.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(ro.ghasachi.bt.persistence.tables.pojos.Egroup object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>id IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Egroup> fetchById(Integer... values) {
		return fetch(Egroup.EGROUP.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>id = value</code>
	 */
	public ro.ghasachi.bt.persistence.tables.pojos.Egroup fetchOneById(Integer value) {
		return fetchOne(Egroup.EGROUP.ID, value);
	}

	/**
	 * Fetch records that have <code>name IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Egroup> fetchByName(String... values) {
		return fetch(Egroup.EGROUP.NAME, values);
	}

	/**
	 * Fetch a unique record that has <code>name = value</code>
	 */
	public ro.ghasachi.bt.persistence.tables.pojos.Egroup fetchOneByName(String value) {
		return fetchOne(Egroup.EGROUP.NAME, value);
	}

	/**
	 * Fetch records that have <code>user IN (values)</code>
	 */
	public List<ro.ghasachi.bt.persistence.tables.pojos.Egroup> fetchByUser(Integer... values) {
		return fetch(Egroup.EGROUP.USER, values);
	}
}
