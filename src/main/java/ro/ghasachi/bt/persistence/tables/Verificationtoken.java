/**
 * This class is generated by jOOQ
 */
package ro.ghasachi.bt.persistence.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import ro.ghasachi.bt.persistence.Keys;
import ro.ghasachi.bt.persistence.Mydb;
import ro.ghasachi.bt.persistence.tables.records.VerificationtokenRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Verificationtoken extends TableImpl<VerificationtokenRecord> {

	private static final long serialVersionUID = -1612671825;

	/**
	 * The reference instance of <code>mydb.verificationtoken</code>
	 */
	public static final Verificationtoken VERIFICATIONTOKEN = new Verificationtoken();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<VerificationtokenRecord> getRecordType() {
		return VerificationtokenRecord.class;
	}

	/**
	 * The column <code>mydb.verificationtoken.id</code>.
	 */
	public final TableField<VerificationtokenRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mydb.verificationtoken.expiredate</code>.
	 */
	public final TableField<VerificationtokenRecord, Timestamp> EXPIREDATE = createField("expiredate", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>mydb.verificationtoken.token</code>.
	 */
	public final TableField<VerificationtokenRecord, String> TOKEN = createField("token", org.jooq.impl.SQLDataType.VARCHAR.length(37).nullable(false), this, "");

	/**
	 * The column <code>mydb.verificationtoken.verified</code>.
	 */
	public final TableField<VerificationtokenRecord, Byte> VERIFIED = createField("verified", org.jooq.impl.SQLDataType.TINYINT, this, "");

	/**
	 * The column <code>mydb.verificationtoken.userid</code>.
	 */
	public final TableField<VerificationtokenRecord, Integer> USERID = createField("userid", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>mydb.verificationtoken.datecreated</code>.
	 */
	public final TableField<VerificationtokenRecord, Timestamp> DATECREATED = createField("datecreated", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>mydb.verificationtoken</code> table reference
	 */
	public Verificationtoken() {
		this("verificationtoken", null);
	}

	/**
	 * Create an aliased <code>mydb.verificationtoken</code> table reference
	 */
	public Verificationtoken(String alias) {
		this(alias, VERIFICATIONTOKEN);
	}

	private Verificationtoken(String alias, Table<VerificationtokenRecord> aliased) {
		this(alias, aliased, null);
	}

	private Verificationtoken(String alias, Table<VerificationtokenRecord> aliased, Field<?>[] parameters) {
		super(alias, Mydb.MYDB, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<VerificationtokenRecord, Integer> getIdentity() {
		return Keys.IDENTITY_VERIFICATIONTOKEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<VerificationtokenRecord> getPrimaryKey() {
		return Keys.KEY_VERIFICATIONTOKEN_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<VerificationtokenRecord>> getKeys() {
		return Arrays.<UniqueKey<VerificationtokenRecord>>asList(Keys.KEY_VERIFICATIONTOKEN_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<VerificationtokenRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<VerificationtokenRecord, ?>>asList(Keys.USERFK);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Verificationtoken as(String alias) {
		return new Verificationtoken(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Verificationtoken rename(String name) {
		return new Verificationtoken(name, null);
	}
}
